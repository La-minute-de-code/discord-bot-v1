generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id
  username        String
  roles           String   
  firstJoinDate   DateTime @default(now())
  points_challenge Int     @default(0)
  exp             Int      @default(0)
  lastDailyExp    DateTime? // Pour tracker la récompense journalière
  messageCount    Int      @default(0) // Pour tracker les 20 messages
  birthday        String?  // Format "DD/MM"
  count_quiz_Success      Int      @default(0)
  count_quiz_Fail         Int      @default(0)
  quiz             Quiz[]
  submissions      ChallengeSubmission[]
}

model Quiz {
  id          Int      @id @default(autoincrement())
  nb_response_success   Int 
  nb_response_fail      Int
  note      Int
  userId      String
  createdAt   DateTime @default(now())
  updatedAt DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model ThreadReward {
    id        String   @id @default(cuid())
    threadId  String
    userId    String
    createdAt DateTime @default(now())

    @@unique([threadId, userId])
}

model Challenge {
    id          String   @id @default(cuid())
    theme       String
    dateLimite  DateTime
    createdAt   DateTime @default(now())
    isActive    Boolean  @default(true)
    submissions ChallengeSubmission[]
}

model ChallengeSubmission {
    id          String   @id @default(cuid())
    userId      String
    challengeId String
    content     String
    votes       Int      @default(0)
    createdAt   DateTime @default(now())
    challenge   Challenge @relation(fields: [challengeId], references: [id])
    user        User     @relation(fields: [userId], references: [id])
}

